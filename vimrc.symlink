"""" Pathogen setup """"""
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

"color anotherdark

set foldmethod=syntax
setlocal foldmarker=/*,*/
set guioptions=aAce
set clipboard=unnamed
set number
set ignorecase
set noswapfile
set hlsearch
set nowrap
set hidden

" tab should create 2 spaces
set expandtab
set tabstop=2

" for ruby syntax, use 2 spaces
autocmd BufRead,BufNewFile *.rb set sw=2 sts=2 et

" make the shell source .bashrc and .bash_profle
set shell=bash\ --login

" Map leader
:let mapleader = ","

" Map an easier excape
inoremap jj <ESC>

" Give a shortcut key to NERD Tree
map <leader>n :NERDTreeToggle<CR>

" Give a shortcut to CtrlP
map <leader>t :CtrlP<CR>
" save ctrlP cache
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'
set wildignore+=*.png,*.jpg,*.pdf,*.swf
let g:ctrlp_custom_ignore = '\.git$\|\.o$\|\.app$\|\.beam$\|\.dSYM\|\.ipa$\|\.csv\|tags\|public\/images$\|public\/uploads$\|log\|tmp$\|source_maps\|app\/assets\/images\|test\/reports\|node_modules\|bower_components'

" Shortcut for switching window
map <leader>w <C-W>w
map <D-ENTER> :set invfullscreen<CR>

" Increase or Decrease the current transparency value
nnoremap <C-q> :set transparency+=1<CR>
nnoremap <C-a> :set transparency-=1<CR>

" Map vimGREP
map <leader>g execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>

"""""""""""" VimOrganizer settings
filetype plugin indent on

au! BufRead,BufWrite,BufWritePost,BufNewFile *.org
au BufEnter *.org call org#SetOrgFileType()
""""""""""""

" attempting to get the syntax automatically selected based on extension
syntax on
filetype on
filetype plugin on
au BufNewFile,BufRead *.note set filetype=note

" Show trailing spaces as a dot
set list listchars=trail:.,tab:>>

" ctags configurations
let g:ctags_statusline=1

" map a command for doing a git pull
:ca gp !git pull

" don't automatically start instant markdown preview
" to start run the command :InstantMarkdownPreview
let g:instant_markdown_autostart = 0

" enable the numpad
if &term=="xterm" || &term=="xterm-color"
  set t_Co=8
  set t_Sb=^[4%dm
  set t_Sf=^[3%dm
  :imap <Esc>Oq 1
  :imap <Esc>Or 2
  :imap <Esc>Os 3
  :imap <Esc>Ot 4
  :imap <Esc>Ou 5
  :imap <Esc>Ov 6
  :imap <Esc>Ow 7
  :imap <Esc>Ox 8
  :imap <Esc>Oy 9
  :imap <Esc>Op 0
  :imap <Esc>On .
  :imap <Esc>OQ /
  :imap <Esc>OR *
  :imap <Esc>Ol +
  :imap <Esc>OS -
endif

""""""""""" Functions
nnoremap <leader><Space> :call TrimSpaces()<CR>
function TrimSpaces()
  %s/\s*$//
  %s/\t/  /g
  ''
:endfunction

" Create a codefolded note block with the current date
nnoremap <leader>f :call NoteBlock()<CR>
function NoteBlock()
  let @a= "/* ** ".strftime("%m/%d/%y").":"
  let @b= "*/"
  put b
  .-1 put a
:endfunction

function GitGrep(...)
        let save = &grepprg
        set grepprg=git\ grep\ -n\ $*
        let s = 'grep'
        for i in a:000
                let s = s . ' ' . i
        endfor
        exe s
        let &grepprg = save
:endfunction
command -nargs=? G call GitGrep(<f-args>)
